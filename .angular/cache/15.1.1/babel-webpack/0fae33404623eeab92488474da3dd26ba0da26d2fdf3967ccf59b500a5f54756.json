{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"../services/auth.service\";\nexport class AuthGuard {\n  constructor(router, authservice) {\n    this.router = router;\n    this.authservice = authservice;\n  }\n  canActivate(route, state) {\n    if (localStorage.getItem(\"token\")) {\n      return true;\n    } else {\n      alert(\"login is manditory to opn this page\");\n      this.router.navigateByUrl(\"/login\");\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(i1.Router), i0.ɵɵinject(i2.AuthService));\n};\nAuthGuard.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AASA,OAAM,MAAOA,SAAS;EACpBC,YAAoBC,MAAa,EAASC,WAAuB;IAA7C,WAAM,GAAND,MAAM;IAAgB,gBAAW,GAAXC,WAAW;EAAc;EAEnEC,WAAW,CACTC,KAA6B,EAC7BC,KAA0B;IAE1B,IAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,EAAC;MAC/B,OAAO,IAAI;KACZ,MACC;MACFC,KAAK,CAAC,qCAAqC,CAAC;MAC5C,IAAI,CAACP,MAAM,CAACQ,aAAa,CAAC,QAAQ,CAAC;MACnC,OAAO,KAAK;;EAEhB;;AAfaV,SAAS;mBAATA,SAAS;AAAA;AAATA,SAAS;SAATA,SAAS;EAAAW,SAATX,SAAS;EAAAY,YAFR;AAAM","names":["AuthGuard","constructor","router","authservice","canActivate","route","state","localStorage","getItem","alert","navigateByUrl","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\APerkampally\\Desktop\\folder\\User-Authorization\\userapp\\src\\app\\guards\\auth.guard.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ActivatedRouteSnapshot, CanActivate,Router, RouterStateSnapshot, UrlTree } from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class AuthGuard implements CanActivate {\r\n  constructor(private router:Router,private authservice:AuthService){}\r\n  \r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | boolean | UrlTree {\r\n\r\n    if(localStorage.getItem(\"token\")){\r\n      return true;\r\n    }\r\n  else{\r\n    alert(\"login is manditory to opn this page\");\r\n    this.router.navigateByUrl(\"/login\")\r\n    return false;\r\n  }\r\n}\r\n  \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}