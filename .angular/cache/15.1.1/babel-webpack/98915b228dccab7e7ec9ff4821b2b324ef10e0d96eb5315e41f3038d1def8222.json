{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, FormGroup, Validators } from '@angular/forms';\nlet RegisterComponent = class RegisterComponent {\n  constructor(register, bnIdle, router) {\n    this.register = register;\n    this.bnIdle = bnIdle;\n    this.router = router;\n    this.repeatPass = 'none';\n    this.registerForm = new FormGroup({\n      firstname: new FormControl(\"\", [Validators.required, Validators.minLength(2), Validators.pattern(\"[a-zA-Z].*\")]),\n      lastname: new FormControl(\"\", [Validators.required, Validators.minLength(2), Validators.pattern(\"[a-zA-Z].*\")]),\n      email: new FormControl(\"\", [Validators.required, Validators.email]),\n      mobile: new FormControl(\"\", [Validators.required, Validators.maxLength(10), Validators.minLength(10), Validators.pattern(\"[0-9]*\")]),\n      gender: new FormControl(\"\", [Validators.required]),\n      pwd: new FormControl(\"\", [Validators.required, Validators.maxLength(15), Validators.minLength(6)]),\n      rpwd: new FormControl(\"\")\n    });\n  }\n  ngOnInit() {\n    //60 = 1 minute\n    this.bnIdle.startWatching(3600).subscribe(res => {\n      if (res) {\n        console.log('session expired');\n        // this.router.navigateByUrl('logout');\n        this.router.navigate([\"login\"]);\n      }\n    });\n  }\n  registersubmited() {\n    if (this.Pwd.value == this.Rpwd.value) {\n      console.log(this.registerForm.valid);\n      this.repeatPass = 'none';\n      alert(\"sucussfully submited!\");\n      console.log(this.registerForm);\n      this.register.saveregister(this.registerForm.value).subscribe(result => {\n        console.log(result);\n      });\n    } else {\n      this.repeatPass = 'inline';\n      alert(\"submission failed !\");\n    }\n  }\n  get FirstName() {\n    return this.registerForm.get(\"firstname\");\n  }\n  get LastName() {\n    return this.registerForm.get(\"lastname\");\n  }\n  get Email() {\n    return this.registerForm.get(\"email\");\n  }\n  get Mobile() {\n    return this.registerForm.get(\"mobile\");\n  }\n  get Gender() {\n    return this.registerForm.get(\"gender\");\n  }\n  get Pwd() {\n    return this.registerForm.get(\"pwd\");\n  }\n  get Rpwd() {\n    return this.registerForm.get(\"rpwd\");\n  }\n};\nRegisterComponent = __decorate([Component({\n  selector: 'app-register',\n  templateUrl: './register.component.html',\n  styleUrls: ['./register.component.scss']\n})], RegisterComponent);\nexport { RegisterComponent };","map":{"version":3,"mappings":"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","names":["Component","FormControl","FormGroup","Validators","RegisterComponent","constructor","register","bnIdle","router","firstname","required","minLength","pattern","lastname","email","mobile","maxLength","gender","pwd","rpwd","ngOnInit","startWatching","subscribe","res","console","log","navigate","registersubmited","Pwd","value","Rpwd","registerForm","valid","repeatPass","alert","saveregister","result","FirstName","get","LastName","Email","Mobile","Gender","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\APerkampally\\Desktop\\folder\\User-Authorization\\userapp\\src\\app\\components\\register\\register.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormControl,FormGroup ,Validators} from '@angular/forms';\r\nimport { RegisterService } from 'src/app/services/register.service';\r\nimport { BnNgIdleService } from 'bn-ng-i'; \r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-register',\r\n  templateUrl: './register.component.html',\r\n  styleUrls: ['./register.component.scss']\r\n})\r\nexport class RegisterComponent implements OnInit {\r\n  repeatPass: string = 'none';\r\n  constructor(private register:RegisterService,\r\n              private bnIdle: BnNgIdleService,\r\n              private router:Router) { }\r\n\r\n  ngOnInit(): void {\r\n \r\n    //60 = 1 minute\r\n    this.bnIdle.startWatching(3600).subscribe((res) => {\r\n      if (res) {\r\n        console.log('session expired');\r\n        // this.router.navigateByUrl('logout');\r\n        this.router.navigate([\"login\"])\r\n      }\r\n    });\r\n\r\n  }\r\n\r\n  registerForm = new FormGroup({\r\n    firstname: new FormControl(\"\",[\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n      Validators.pattern(\"[a-zA-Z].*\")]),\r\n    lastname:new FormControl(\"\",[\r\n      Validators.required,\r\n      Validators.minLength(2),\r\n      Validators.pattern(\"[a-zA-Z].*\")]),\r\n    email:new FormControl(\"\",[\r\n      Validators.required,\r\n      Validators.email]),\r\n    mobile:new FormControl(\"\",[\r\n      Validators.required,\r\n      Validators.maxLength(10),\r\n      Validators.minLength(10),\r\n      Validators.pattern(\"[0-9]*\")]),\r\n    gender: new FormControl(\"\",[\r\n      Validators.required]),\r\n    pwd:new FormControl(\"\",[\r\n      Validators.required,\r\n      Validators.maxLength(15),\r\n      Validators.minLength(6),]),\r\n    rpwd: new FormControl(\"\"),\r\n  });\r\n\r\n\r\n  registersubmited(){\r\n    if(this.Pwd.value == this.Rpwd.value){\r\n      console.log(this.registerForm.valid);\r\n      this.repeatPass = 'none'\r\n      alert(\"sucussfully submited!\");\r\n      console.log(this.registerForm)\r\n      this.register.saveregister(this.registerForm.value).subscribe((result)=>{\r\n        console.log(result)\r\n      })\r\n      \r\n    }else{\r\n      this.repeatPass = 'inline'\r\n      alert(\"submission failed !\");\r\n    }\r\n\r\n    \r\n  }\r\n\r\n  get FirstName(): FormControl {\r\n  return this.registerForm.get(\"firstname\")as FormControl;\r\n  }\r\n  get LastName(): FormControl {\r\n  return this.registerForm.get(\"lastname\")as FormControl;\r\n  }\r\n  get Email(): FormControl {\r\n  return this.registerForm.get(\"email\")as FormControl;\r\n  }\r\n  get Mobile(): FormControl {\r\n  return this.registerForm.get(\"mobile\")as FormControl;\r\n  }\r\n  get Gender(): FormControl {\r\n  return this.registerForm.get(\"gender\")as FormControl;\r\n  }\r\n  get Pwd(): FormControl {\r\n  return this.registerForm.get(\"pwd\")as FormControl;\r\n  }\r\n  get Rpwd(): FormControl {\r\n    return this.registerForm.get(\"rpwd\")as FormControl;\r\n  }\r\n\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}