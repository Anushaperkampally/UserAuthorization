{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/fo';\nlet AdminloginComponent = class AdminloginComponent {\n  constructor(formbuilder, http, router, cookie) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.cookie = cookie;\n  }\n  ngOnInit() {\n    this.loginform = this.formbuilder.group({\n      email: [''],\n      password: ['', Validators.required]\n    });\n  }\n  login() {\n    this.http.get(\"http://localhost:3000/adminlogin\").subscribe(res => {\n      const user = res.find(a => {\n        return a.email === this.loginform.value.email && a.password === this.loginform.value.password;\n      });\n      if (user) {\n        this.cookie.set(\"userid\", \"1\");\n        alert(\"user with id (\" + this.cookie.get(\"userid\") + \") success\");\n        this.loginform.reset();\n        this.router.navigate([\"register\"]);\n      } else {\n        alert(\"user not found\");\n        this.router.navigate([\"login\"]);\n      }\n      error => {\n        alert(\"something went wrong\");\n      };\n    });\n  }\n};\nAdminloginComponent = __decorate([Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html',\n  styleUrls: ['./adminlogin.component.scss']\n})], AdminloginComponent);\nexport { AdminloginComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAiCC,UAAU,QAAQ,aAAa;AAYzD,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,WAAuB,EAASC,IAAe,EAASC,MAAa,EAAUC,MAAoB;IAAnG,gBAAW,GAAXH,WAAW;IAAqB,SAAI,GAAJC,IAAI;IAAoB,WAAM,GAANC,MAAM;IAAiB,WAAM,GAANC,MAAM;EAAgB;EAEzHC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACpCC,KAAK,EAAC,CAAC,EAAE,CAAC;MACVC,QAAQ,EAAC,CAAC,EAAE,EAACX,UAAU,CAACY,QAAQ;KACjC,CAAC;EACJ;EAEAC,KAAK;IACH,IAAI,CAACT,IAAI,CAACU,GAAG,CAAM,kCAAkC,CAAC,CAACC,SAAS,CAACC,GAAG,IAAE;MACpE,MAAMC,IAAI,GAAED,GAAG,CAACE,IAAI,CAAEC,CAAK,IAAG;QAC5B,OAAOA,CAAC,CAACT,KAAK,KAAI,IAAI,CAACF,SAAS,CAACY,KAAK,CAACV,KAAK,IAAIS,CAAC,CAACR,QAAQ,KAAK,IAAI,CAACH,SAAS,CAACY,KAAK,CAACT,QAAQ;MAC9F,CAAC,CAAC;MACF,IAAGM,IAAI,EAAC;QACN,IAAI,CAACX,MAAM,CAACe,GAAG,CAAC,QAAQ,EAAC,GAAG,CAAC;QAC7BC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAChB,MAAM,CAACQ,GAAG,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;QACjE,IAAI,CAACN,SAAS,CAACe,KAAK,EAAE;QACtB,IAAI,CAAClB,MAAM,CAACmB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;OACnC,MACG;QACFF,KAAK,CAAC,gBAAgB,CAAC;QACvB,IAAI,CAACjB,MAAM,CAACmB,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;MAEhCC,KAAS,IAAG;QACXH,KAAK,CAAC,sBAAsB,CAAC;MAC/B,CAAC;IACH,CAAC,CAAC;EACJ;CAGD;AAnCYrB,mBAAmB,eAL/BF,SAAS,CAAC;EACT2B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW3B,mBAAmB,CAmC/B;SAnCYA,mBAAmB","names":["Component","Validators","AdminloginComponent","constructor","formbuilder","http","router","cookie","ngOnInit","loginform","group","email","password","required","login","get","subscribe","res","user","find","a","value","set","alert","reset","navigate","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\APerkampally\\Desktop\\folder\\User-Authorization\\userapp\\src\\app\\components\\adminlogin\\adminlogin.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component,OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/fo';\r\nimport { Router } from '@angular/router';\r\nimport { BnNgIdleService } from 'bn-ng-idle'; \r\nimport { CookieService } from 'ngx-cookie-service';\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-adminlogin',\r\n  templateUrl: './adminlogin.component.html',\r\n  styleUrls: ['./adminlogin.component.scss']\r\n})\r\nexport class AdminloginComponent {\r\n\r\n  public loginform!: FormGroup\r\n\r\n  constructor(private formbuilder:FormBuilder,private http:HttpClient,private router:Router, private cookie:CookieService){}\r\n\r\n  ngOnInit(): void {\r\n    this.loginform=this.formbuilder.group({\r\n      email:[''],\r\n      password:['',Validators.required]\r\n    })\r\n  }\r\n\r\n  login(){\r\n    this.http.get<any>(\"http://localhost:3000/adminlogin\").subscribe(res=>{\r\n      const user =res.find((a:any)=>{\r\n        return a.email ===this.loginform.value.email && a.password === this.loginform.value.password\r\n      });\r\n      if(user){\r\n        this.cookie.set(\"userid\",\"1\");\r\n        alert(\"user with id (\" + this.cookie.get(\"userid\") + \") success\");\r\n        this.loginform.reset()\r\n        this.router.navigate([\"register\"])\r\n      }\r\n      else{\r\n        alert(\"user not found\")\r\n        this.router.navigate([\"login\"])\r\n      }\r\n      (error:any)=>{\r\n        alert(\"something went wrong\")\r\n      }\r\n    })\r\n  }\r\n \r\n   \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}