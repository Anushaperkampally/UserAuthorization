{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { Validators } from '@angular/forms';\nlet AdminloginComponent = class AdminloginComponent {\n  constructor(formbuilder, http, router, cookie, bnIdle) {\n    this.formbuilder = formbuilder;\n    this.http = http;\n    this.router = router;\n    this.cookie = cookie;\n    this.bnIdle = bnIdle;\n  }\n  ngOnInit() {\n    this.loginform = this.formbuilder.group({\n      email: [''],\n      password: ['', Validators.required]\n    });\n    //60 = 1 minute\n    this.bnIdle.startWatching(3600).subscribe(res => {\n      if (res) {\n        console.log('session expired');\n        // this.router.navigateByUrl('logout');\n        this.router.navigate([\"login\"]);\n      }\n    });\n  }\n  login() {\n    this.http.get(\"http://localhost:3000/adminlogin\").subscribe(res => {\n      const user = res.find(a => {\n        return a.email === this.loginform.value.email && a.password === this.loginform.value.password;\n      });\n      if (user) {\n        this.cookie.set(\"userid\", \"1\");\n        alert(\"user with id (\" + this.cookie.get(\"userid\") + \") success\");\n        this.loginform.reset();\n        this.router.navigate([\"register\"]);\n      } else {\n        alert(\"user not found\");\n        this.router.navigate([\"login\"]);\n      }\n      error => {\n        alert(\"something went wrong\");\n      };\n    });\n  }\n};\nAdminloginComponent = __decorate([Component({\n  selector: 'app-adminlogin',\n  templateUrl: './adminlogin.component.html',\n  styleUrls: ['./adminlogin.component.scss']\n})], AdminloginComponent);\nexport { AdminloginComponent };","map":{"version":3,"mappings":";AACA,SAASA,SAAS,QAAe,eAAe;AAChD,SAAiCC,UAAU,QAAQ,gBAAgB;AAY5D,IAAMC,mBAAmB,GAAzB,MAAMA,mBAAmB;EAI9BC,YAAoBC,WAAuB,EAASC,IAAe,EAASC,MAAa,EAAUC,MAAoB,EAAUC,MAAsB;IAAnI,gBAAW,GAAXJ,WAAW;IAAqB,SAAI,GAAJC,IAAI;IAAoB,WAAM,GAANC,MAAM;IAAiB,WAAM,GAANC,MAAM;IAAwB,WAAM,GAANC,MAAM;EAAmB;EAE1JC,QAAQ;IACN,IAAI,CAACC,SAAS,GAAC,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC;MACpCC,KAAK,EAAC,CAAC,EAAE,CAAC;MACVC,QAAQ,EAAC,CAAC,EAAE,EAACZ,UAAU,CAACa,QAAQ;KACjC,CAAC;IAED;IACA,IAAI,CAACN,MAAM,CAACO,aAAa,CAAC,IAAI,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAI;MACjD,IAAIA,GAAG,EAAE;QACPC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;QAC9B;QACA,IAAI,CAACb,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;IAEnC,CAAC,CAAC;EACJ;EAEAC,KAAK;IACH,IAAI,CAAChB,IAAI,CAACiB,GAAG,CAAM,kCAAkC,CAAC,CAACN,SAAS,CAACC,GAAG,IAAE;MACpE,MAAMM,IAAI,GAAEN,GAAG,CAACO,IAAI,CAAEC,CAAK,IAAG;QAC5B,OAAOA,CAAC,CAACb,KAAK,KAAI,IAAI,CAACF,SAAS,CAACgB,KAAK,CAACd,KAAK,IAAIa,CAAC,CAACZ,QAAQ,KAAK,IAAI,CAACH,SAAS,CAACgB,KAAK,CAACb,QAAQ;MAC9F,CAAC,CAAC;MACF,IAAGU,IAAI,EAAC;QACN,IAAI,CAAChB,MAAM,CAACoB,GAAG,CAAC,QAAQ,EAAC,GAAG,CAAC;QAC7BC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAACrB,MAAM,CAACe,GAAG,CAAC,QAAQ,CAAC,GAAG,WAAW,CAAC;QACjE,IAAI,CAACZ,SAAS,CAACmB,KAAK,EAAE;QACtB,IAAI,CAACvB,MAAM,CAACc,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;OACnC,MACG;QACFQ,KAAK,CAAC,gBAAgB,CAAC;QACvB,IAAI,CAACtB,MAAM,CAACc,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC;;MAEhCU,KAAS,IAAG;QACXF,KAAK,CAAC,sBAAsB,CAAC;MAC/B,CAAC;IACH,CAAC,CAAC;EACJ;CAGD;AA5CY1B,mBAAmB,eAL/BF,SAAS,CAAC;EACT+B,QAAQ,EAAE,gBAAgB;EAC1BC,WAAW,EAAE,6BAA6B;EAC1CC,SAAS,EAAE,CAAC,6BAA6B;CAC1C,CAAC,GACW/B,mBAAmB,CA4C/B;SA5CYA,mBAAmB","names":["Component","Validators","AdminloginComponent","constructor","formbuilder","http","router","cookie","bnIdle","ngOnInit","loginform","group","email","password","required","startWatching","subscribe","res","console","log","navigate","login","get","user","find","a","value","set","alert","reset","error","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\APerkampally\\Desktop\\folder\\User-Authorization\\userapp\\src\\app\\components\\adminlogin\\adminlogin.component.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\r\nimport { Component,OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { CookieService } from 'ngx-cookie-service';\r\nimport { BnNgIdleService }F\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-adminlogin',\r\n  templateUrl: './adminlogin.component.html',\r\n  styleUrls: ['./adminlogin.component.scss']\r\n})\r\nexport class AdminloginComponent {\r\n\r\n  public loginform!: FormGroup\r\n\r\n  constructor(private formbuilder:FormBuilder,private http:HttpClient,private router:Router, private cookie:CookieService, private bnIdle:BnNgIdleService ){}\r\n\r\n  ngOnInit(): void {\r\n    this.loginform=this.formbuilder.group({\r\n      email:[''],\r\n      password:['',Validators.required]\r\n    })\r\n\r\n     //60 = 1 minute\r\n     this.bnIdle.startWatching(3600).subscribe((res) => {\r\n      if (res) {\r\n        console.log('session expired');\r\n        // this.router.navigateByUrl('logout');\r\n        this.router.navigate([\"login\"])\r\n      }\r\n    });\r\n  }\r\n\r\n  login(){\r\n    this.http.get<any>(\"http://localhost:3000/adminlogin\").subscribe(res=>{\r\n      const user =res.find((a:any)=>{\r\n        return a.email ===this.loginform.value.email && a.password === this.loginform.value.password\r\n      });\r\n      if(user){\r\n        this.cookie.set(\"userid\",\"1\");\r\n        alert(\"user with id (\" + this.cookie.get(\"userid\") + \") success\");\r\n        this.loginform.reset()\r\n        this.router.navigate([\"register\"])\r\n      }\r\n      else{\r\n        alert(\"user not found\")\r\n        this.router.navigate([\"login\"])\r\n      }\r\n      (error:any)=>{\r\n        alert(\"something went wrong\")\r\n      }\r\n    })\r\n  }\r\n \r\n   \r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}